
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace, FontAwesome 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+Shift+v split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1:"
set $ws2 "2:"
set $ws3 "3:"
set $ws4 "4:"
set $ws5 "5:V"
set $ws6 "6:VI"
set $ws7 "7:VII"
set $ws8 "8:VIII"
set $ws9 "9:IX"
set $ws10 "10:X"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# Window Assignments
# Arrow: →
# Workspace 1: messaging
assign [class="discord"] → $ws1
assign [class="(?i)slack"] → $ws1
# Workspace 2: Security
assign [class="keepassxc"] → $ws2
# Workspace 3: Reserach
assign [class="Mendeley Desktop"] → $ws3
assign [class="(?i)Zotero"] → $ws3
# Workspace 4: Browsing
# assign [class="(?i)Firefox"] → $ws4
# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym l resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym j resize shrink height 10 px or 10 ppt
        bindsym h resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Right resize shrink width 10 px or 10 ppt
        bindsym Up resize grow height 10 px or 10 ppt
        bindsym Down resize shrink height 10 px or 10 ppt
        bindsym Left resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
  status_command i3status
  strip_workspace_numbers yes
}

# Shutdown, Reboot, & Lock Screen
set $Locker loginctl lock-session

set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id $Locker, mode "default"
    bindsym e exec --no-startup-id i3-msg exit, mode "default"
    bindsym s exec --no-startup-id $Locker && systemctl suspend, mode "default"
    bindsym h exec --no-startup-id $Locker && systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"

    # back to normal: Enter or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+s mode "$mode_system"

# Wal
# Set colors from Xresources
# Change 'color7' and 'color2' to whatever colors you want i3 to use from the generated schemes
# NOTE: The '#XXXXXX' at the end of the lines below is the color i3 will use if it fails to 
# get colors from Xresources.
set_from_resource $fg i3wm.color7 #f0f0f0
set_from_resource $bg i3wm.color2 #f0f0f0

# class			border	backgr.	text	indicator	child_border
client.focused		$bg	$bg	$fg	$bg		$bg
client.focused_inactive	$bg	$bg	$fg	$bg		$bg
client.unfocused	$bg	$bg	$fg	$bg		$bg
client.urgent		$bg	$bg	$fg	$bg		$bg
client.placeholder	$bg	$bg	$fg	$bg		$bg

client.background	$bg

# start dmenu (a program launcher)
# PROTIP: You can also dynamically set dmenu's colors this way:
# bindsym $mod+d exec dmenu_run -nb "$fg" -nf "$bg" -sb "$bg" -sf "$fg"
bindsym $mod+d exec --no-startup-id i3-dmenu-desktop --dmenu='dmenu -i -nb "$fg" -nf "$bg" -sb "$bg" -sf "$fg"'

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

## Manual managment of external displays
set $mode_vga_display Extra Screen: VGA | (r) Right, (l) Left, (a) Above, (b) Below, (s) Same, (x) Off
mode "$mode_vga_display" {
    bindsym r exec --no-startup-id xrandr --output VGA1 --auto --right-of LVDS1, mode "default" 
    bindsym l exec --no-startup-id xrandr --output VGA1 --auto --left-of LVDS1, mode "default" 
    bindsym a exec --no-startup-id xrandr --output VGA1 --auto --above-of LVDS1, mode "default" 
    bindsym b exec --no-startup-id xrandr --output VGA1 --auto --below-of LVDS1, mode "default" 
    bindsym s exec --no-startup-id xrandr --output VGA1 --auto --same-as  LVDS1, mode "default" 
    bindsym x exec --no-startup-id xrandr --output VGA1 --auto --off, mode "default"

    # back to normal: Entor or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+x mode "$mode_vga_display"

set $mode_dp_display Extra Screen: DP | (r) Right, (l) Left, (a) above, (b) below, (s) Same, (x) Off

mode "$mode_dp_display" {
    bindsym r exec --no-startup-id xrandr --output DP1 --auto --right-of LVDS1, mode "default" 
    bindsym l exec --no-startup-id xrandr --output DP1 --auto --left-of LVDS1, mode "default" 
    bindsym a exec --no-startup-id xrandr --output DP1 --auto --above-of LVDS1, mode "default" 
    bindsym b exec --no-startup-id xrandr --output DP1 --auto --below-of LVDS1, mode "default" 
    bindsym s exec --no-startup-id xrandr --output DP1 --auto --same-as  LVDS1, mode "default" 
    bindsym x exec --no-startup-id xrandr --output DP1 --auto --off, mode "default"

    # back to normal: Entor or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+shift+x mode "$mode_dp_display"

set $mode_workspace_display Move to output on: (r) RIGHT, (l) LEFT, (a) ABOVE, (b) BELOW
mode "$mode_workspace_display" {
    bindsym r moveworkspace to output right, mode "default" 
    bindsym l moveworkspace to output left, mode "default" 
    bindsym a moveworkspace to output above, mode "default" 
    bindsym b moveworkspace to output below, mode "default" 

    # back to normal: Entor or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+m mode "$mode_workspace_display"

## Manual managment of main display rotation
set $mode_rotation Rotate Screen (r) RIGHT, (l) LEFT, (n) NORMAL, (i) INVERTED
mode "$mode_rotation" {
    bindsym r exec --no-startup-id rotate_desktop.sh right, mode "default" 
    bindsym l exec --no-startup-id rotate_desktop.sh left, mode "default" 
    bindsym n exec --no-startup-id rotate_desktop.sh normal, mode "default" 
    bindsym i exec --no-startup-id rotate_desktop.sh inverted, mode "default" 

    # back to normal: Entor or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+shift+f mode "$mode_rotation"


## Manual managment of main display brightness
set $mode_brightness Screen Brightness: 0:0, 1:10, 2:20, 3:30, 4:40, 5:50, 6:60, 7:70, 8:80, 9:90, Shift+0:100
mode "$mode_brightness" {
    bindsym 0 exec --no-startup-id xbacklight -set 0, mode"default" 
    bindsym 1 exec --no-startup-id xbacklight -set 10, mode"default" 
    bindsym 2 exec --no-startup-id xbacklight -set 20, mode"default" 
    bindsym 3 exec --no-startup-id xbacklight -set 30, mode"default" 
    bindsym 4 exec --no-startup-id xbacklight -set 40, mode"default" 
    bindsym 5 exec --no-startup-id xbacklight -set 50, mode"default" 
    bindsym 6 exec --no-startup-id xbacklight -set 60, mode"default" 
    bindsym 7 exec --no-startup-id xbacklight -set 70, mode"default" 
    bindsym 8 exec --no-startup-id xbacklight -set 80, mode"default" 
    bindsym 9 exec --no-startup-id xbacklight -set 90, mode"default" 
    bindsym shift+0 exec --no-startup-id xbacklight -set 100, mode"default" 

    # back to normal: Entor or Escape
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+shift+b mode "$mode_brightness"

# Window transparency
bindsym $mod+t exec devilspie_transparency_transset-df.sh
# Change wallpaper
bindsym $mod+shift+t exec change_background.sh

